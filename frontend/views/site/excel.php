<?php

use yii\helpers\Html;
use yii\widgets\ActiveForm;
use frontend\models\Habitacion;
use frontend\models\ReservacionHab;
use frontend\models\Subservicios;
use frontend\models\Servicio;
use yii\helpers\ArrayHelper;
use yii\helpers\Url;

/* @var $this yii\web\View */
/* @var $model frontend\models\Reservacion */

$this->title = 'REPORTES DE SERVICIOS POR RESERVA';
$this->params['breadcrumbs'][] = ['label' => 'REPORTES', 'url' => ['agencia']];
$this->params['breadcrumbs'][] = $this->title;
?>

<?php

include 'lib/PHPExcel.php';
include 'lib/PHPExcel/Writer/Excel2007.php';

$objPHPExcel = new PHPExcel();

define('EOL', (PHP_SAPI == 'cli') ? PHP_EOL : '<br />');

$rutaExcel = 'd:/calendario.xlsx';

// Set document properties

$objPHPExcel->getProperties()->setCreator("Sistema de Reservas")
        ->setLastModifiedBy("Sistema de Reservas")
        ->setTitle("Generated by Sistema de Reservas v1.0")
        ->setSubject("Office 2007 XLSX Test Document")
        ->setDescription("Test document for Office 2007 XLSX, generated using PHP classes.")
        ->setKeywords("office 2007 openxml php")
        ->setCategory("Test result file");

// Create a first sheet, representing sales data

$objPHPExcel->setActiveSheetIndex(0);

$col = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];


$color = ['#0073b7', '#d7c0c2', '#d3676e', '#c0222d', '#eb0d1d', '#f0c0c3', '#c681e7', '#b7a9be', '#edd6f7', '#86b3e5', '#5a81ac', '#a4bcd6', '#c8e6e9', '#88b6ba'
    , '#31a2ac', '#0dd9eb', '#59d898', '#379365', '#d8e4de', '#c5ed8b', '#8da866', '#6da918', '#ded247', '#b1a738', '#00bbf9', '#00c2ff', '#00ffff', '#ff3cff'];

$dias = array("", "LUN", "MAR", "MIE", "JUE", "VIE", "SAB", "DOM");

$nombre = array();
$posicion = array();

$hab = Habitacion::find()->orderBy('id ASC')->all();

//print_r($col);die;



$objPHPExcel->getActiveSheet()->setCellValue($col[2] . '1', 'CALENDARIO');
$objPHPExcel->getActiveSheet()->setCellValue($col[count($hab)] . '1', PHPExcel_Shared_Date::PHPToExcel(gmmktime(0, 0, 0, date('m'), date('d'), date('Y'))));
$objPHPExcel->getActiveSheet()->getStyle($col[count($hab)] . '1')->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_XLSX15);






//Header de la tabla habria que personalizarlo en depencia del reporte
$objPHPExcel->getActiveSheet()->setCellValue('A3', 'DÃ­a');

for ($i = 0; $i < count($hab); $i++) {
    $nombre[$i] = '';
    $objPHPExcel->getActiveSheet()->setCellValue($col[$i + 1] . '3', $hab[$i]->nombre);
}

$cMonth = date("n");
$cYear = date("Y");
$timestamp = mktime(0, 0, 0, $cMonth, 1, $cYear);
$maxday = date("t", $timestamp);
$thismonth = getdate($timestamp);
$startday = $thismonth['wday'];


$connection = \Yii::$app->db;
$connection->open();
$command = $connection->createCommand('select habitacion.nombre,habitacion.id as hab,habitacion.color,reservacion.nombre_cliente,reservacion.obs,reservacion_hab.fecha_entrada,reservacion_hab.fecha_salida,reservacion.codigo,reservacion.id,agencia.nombre as agencia,plan.nombre as plan,ocupacion.nombre as ocupacion FROM reservacion,habitacion,reservacion_hab,agencia,plan,ocupacion,ocupacion_hab where reservacion.id=reservacion_hab.reservacion and reservacion_hab.hab=habitacion.id and reservacion.agencia=agencia.id and reservacion.plan=plan.id and reservacion_hab.ocupacion=ocupacion_hab.id and ocupacion_hab.ocupacion=ocupacion.id  order by reservacion_hab.fecha_entrada,habitacion.id asc');
$reservaciones = $command->queryAll();



$row = 4;


for ($i = 0; $i < ($maxday + $startday) - 1; $i++) {

    $nomdia = $dias[date('N', strtotime(date('Y-m-d', strtotime($cYear . '-' . $cMonth . '-' . ($i - $startday + 1)))))];
    $texto = ($i + 1) . " / " . $nomdia;
    //print_r($texto);die;

    $objPHPExcel->getActiveSheet()->setCellValue('A' . $row, $texto);


    $dif_dias = 0;

    for ($j = 0; $j < count($hab); $j++) {
        $td = 0;
        $aux = 0;
        $pintar = 0;
        $rows = 1;
//                                                        echo $j.' '.date('Y-m-d', strtotime($cYear . '-' . $cMonth . '-' . ($i - $startday + 1)));
        for ($k = 0; $k < count($reservaciones); $k++) {

            if ($reservaciones[$k]['hab'] == $hab[$j]->id) {
                if (date('Y-m-d', strtotime($cYear . '-' . $cMonth . '-' . ($i - $startday + 1))) >= date('Y-m-d', strtotime($reservaciones[$k]['fecha_entrada'])) && date('Y-m-d', strtotime($cYear . '-' . $cMonth . '-' . ($i - $startday + 1))) <= date('Y-m-d', strtotime($reservaciones[$k]['fecha_salida']) - 1)) {

                   $pintar=$row-1;
                    
                      $objPHPExcel->getActiveSheet($col[$j + 1] . $pintar)->getStyle()->getFill()
                                ->setFillType(PHPExcel_Style_Fill::FILL_SOLID)
                                ->getStartColor()->setARGB('FFFF0000');

                        $objPHPExcel->getActiveSheet()->getStyle($col[$j + 1] . $pintar)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
                        $objPHPExcel->getActiveSheet()->getStyle($col[$j + 1] . $pintar)->getFill()->getStartColor()->setARGB('FFFF0000');
                        
                   /* if ($nombre[$j] != $reservaciones[$k]['nombre_cliente']) {
                        $nombre[$j] = $reservaciones[$k]['nombre_cliente'];
                       





                       /* if ($j + 1 < count($hab)) {
                            $nom = $j;
                            for ($m = 0; $m < count($reservaciones); $m++) {
                                if ($reservaciones[$m]['hab'] == $hab[$j + 1]->id) {
                                    if (date('Y-m-d', strtotime($cYear . '-' . $cMonth . '-' . ($i - $startday + 1))) >= date('Y-m-d', strtotime($reservaciones[$m]['fecha_entrada'])) && date('Y-m-d', strtotime($cYear . '-' . $cMonth . '-' . ($i - $startday + 1))) <= date('Y-m-d', strtotime($reservaciones[$m]['fecha_salida']) - 1)) {
                                        if ($nombre[$nom] == $reservaciones[$m]['nombre_cliente']) {
                                            $rows++;
                                            $j+=1;
                                        }
                                    }
                                }
                            }
                            //$j=$nom+$row-1;
                        }*/

                       /* $objPHPExcel->getActiveSheet($col[$j + 1] . $row)->getStyle()->getFill()
                                ->setFillType(PHPExcel_Style_Fill::FILL_SOLID)
                                ->getStartColor()->setARGB('FFFF0000');

                        $objPHPExcel->getActiveSheet()->getStyle($col[$j + 1] . $row)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
                        $objPHPExcel->getActiveSheet()->getStyle($col[$j + 1] . $row)->getFill()->getStartColor()->setARGB('FFFF0000');


                       /* if ($pintar == 0) {
                            $pintar = 1;
                            $start_ts = strtotime($reservaciones[$k]['fecha_entrada']);
                            $end_ts = strtotime($reservaciones[$k]['fecha_salida']);
                            $diferencia = $end_ts - $start_ts;
                            $dif_dias = round($diferencia / 86400);

                            $controlador = 0;

                            $valor = rand(0, count($color) - 1);






                            for ($m = 0; $m < count($posicion); $m++) {
                                if ($posicion[$m]['id'] == $reservaciones[$k]['id']) {
                                    $valor = $posicion[$m]['valor'];
                                    $controlador = 1;
                                    break;
                                }
                            }

                            if ($controlador == 0) {
                                $posicion[count($posicion)] = array(
                                    'id' => $reservaciones[$k]['id'],
                                    'valor' => $valor
                                );
                            }



//                            $textcelda = $reservaciones[$k]['agencia'] . ' ' . $reservaciones[$k]['nombre_cliente'] . ' ' . $reservaciones[$k]['ocupacion'] . ' ' . $reservaciones[$k]['plan'] . '' . $reservaciones[$k]['obs'];
//                            $objPHPExcel->getActiveSheet()->setCellValue($col[$j+1] . $row, $textcelda);
                        }*/
                  /*  } else {
                        $td = 1;
                    }*/
//                                                                    $td = 1;
                }
            }
        }

        if ($td == 0) {
            $objPHPExcel->getActiveSheet()->setCellValue($col[$j + 1] . $row, '');
        }
    }



    $row++;
}

//print_r($reservaciones);die;



















$row = 4;
//echo count($alojamientos); die;
/* for($i=0; $i<count($servxreservas);$i++){

  $objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $servxreservas[$i]['servicio']);
  $objPHPExcel->getActiveSheet()->setCellValue('B'.$row, $servxreservas[$i]['cantidad']);
  $objPHPExcel->getActiveSheet()->setCellValue('C'.$row, $servxreservas[$i]['precio']);
  $objPHPExcel->getActiveSheet()->setCellValue('D'.$row, $servxreservas[$i]['importe']);

  $row++;

  } */

// Protect cells

$objPHPExcel->getActiveSheet()->getProtection()->setSheet(false);    // Needs to be set to true in order to enable any worksheet protection!
$objPHPExcel->getActiveSheet()->protectCells($col[0] . '3:' . $col[count($hab)] . $row, 'PHPExcel');





// Set cell number formats

$objPHPExcel->getActiveSheet()->getStyle('I4:D' . ($row + 2))->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_CURRENCY_USD_SIMPLE);



// Set column widths

$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);


for ($i = 0; $i < count($hab); $i++) {
    $objPHPExcel->getActiveSheet()->getColumnDimension($col[$i + 1])->setWidth(15);
}


// Set fonts

$objPHPExcel->getActiveSheet()->getStyle('C1')->getFont()->setName('Candara');
$objPHPExcel->getActiveSheet()->getStyle('C1')->getFont()->setSize(20);
$objPHPExcel->getActiveSheet()->getStyle('C1')->getFont()->setBold(true);
$objPHPExcel->getActiveSheet()->getStyle('C1')->getFont()->setUnderline(PHPExcel_Style_Font::UNDERLINE_SINGLE);
$objPHPExcel->getActiveSheet()->getStyle('C1')->getFont()->getColor()->setARGB(PHPExcel_Style_Color::COLOR_WHITE);

$objPHPExcel->getActiveSheet()->getStyle($col[count($hab)] . '1')->getFont()->getColor()->setARGB(PHPExcel_Style_Color::COLOR_WHITE);
$objPHPExcel->getActiveSheet()->getStyle($col[count($hab)] . '1')->getFont()->getColor()->setARGB(PHPExcel_Style_Color::COLOR_WHITE);

$objPHPExcel->getActiveSheet()->getStyle($col[0] . ($row + 2))->getFont()->setBold(true);
$objPHPExcel->getActiveSheet()->getStyle($col[count($hab)] . ($row + 2))->getFont()->setBold(true);

// Set thin black border outline around column

$styleThinBlackBorderOutline = array(
    'borders' => array(
        'outline' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        ),
    ),
);
$objPHPExcel->getActiveSheet()->getStyle($col[0] . '4:' . $col[count($hab)] . ($row - 1))->applyFromArray($styleThinBlackBorderOutline);

















// Set thick brown border outline around "Total"
/*
  $styleThickBrownBorderOutline = array(
  'borders' => array(
  'outline' => array(
  'style' => PHPExcel_Style_Border::BORDER_THICK,
  'color' => array('argb' => 'FF993300'),
  ),
  ),
  );
  $objPHPExcel->getActiveSheet()->getStyle('H'.($row+2).':I'.($row+2))->applyFromArray($styleThickBrownBorderOutline);
 */
// Set fills

$objPHPExcel->getActiveSheet()->getStyle($col[0] . '1:' . $col[count($hab)] . '1')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
$objPHPExcel->getActiveSheet()->getStyle($col[0] . '1:' . $col[count($hab)] . '1')->getFill()->getStartColor()->setARGB('FF808080');






// Set style for header row using alternative method

$objPHPExcel->getActiveSheet()->getStyle($col[0] . '3:' . $col[count($hab)] . '3')->applyFromArray(
        array(
            'font' => array(
                'bold' => true
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
            ),
            'borders' => array(
                'top' => array(
                    'style' => PHPExcel_Style_Border::BORDER_THIN
                )
            ),
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_GRADIENT_LINEAR,
                'rotation' => 90,
                'startcolor' => array(
                    'argb' => 'FFA0A0A0'
                ),
                'endcolor' => array(
                    'argb' => 'FFFFFFFF'
                )
            )
        )
);

$objPHPExcel->getActiveSheet()->getStyle($col[0] . '3')->applyFromArray(
        array(
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
            ),
            'borders' => array(
                'left' => array(
                    'style' => PHPExcel_Style_Border::BORDER_THIN
                )
            )
        )
);

$objPHPExcel->getActiveSheet()->getStyle($col[1] . '3')->applyFromArray(
        array(
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
            )
        )
);

$objPHPExcel->getActiveSheet()->getStyle($col[count($hab)] . '3')->applyFromArray(
        array(
            'borders' => array(
                'right' => array(
                    'style' => PHPExcel_Style_Border::BORDER_THIN
                )
            )
        )
);









// Add a drawing to the worksheet

$objDrawing = new PHPExcel_Worksheet_Drawing();
$objDrawing->setName('Logo');
$objDrawing->setDescription('Logo');
$objDrawing->setPath('./images/logo.png');
$objDrawing->setHeight(36);
$objDrawing->setWorksheet($objPHPExcel->getActiveSheet());











// Add a drawing to the worksheet

$objDrawing = new PHPExcel_Worksheet_Drawing();
$objDrawing->setName('Paid');
$objDrawing->setDescription('Paid');
$objDrawing->setPath('./images/paid.png');
$objDrawing->setCoordinates('F50');
$objDrawing->setOffsetX(110);
$objDrawing->setRotation(25);
$objDrawing->getShadow()->setVisible(true);
$objDrawing->getShadow()->setDirection(45);
$objDrawing->setWorksheet($objPHPExcel->getActiveSheet());

// Set header and footer. When no different headers for odd/even are used, odd header is assumed.

$objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddHeader('&L&BInvoice&RPrinted on &D');
$objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&L&B' . $objPHPExcel->getProperties()->getTitle() . '&RPage &P of &N');

// Set page orientation and size

$objPHPExcel->getActiveSheet()->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE);
$objPHPExcel->getActiveSheet()->getPageSetup()->setPaperSize(PHPExcel_Worksheet_PageSetup::PAPERSIZE_A4);

// Rename first worksheet

$objPHPExcel->getActiveSheet()->setTitle('Calendario');










// Set active sheet index to the first sheet, so Excel opens this as the first sheet
$objPHPExcel->setActiveSheetIndex(0);






$objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
$objWriter->save($rutaExcel);

echo ' <div class="alert bg-green alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">Ã</span></button>
                                Se ha creado el Excel de Disponibilidad en la siguiente Ruta <strong>' . $rutaExcel . '</strong><br>
                                <a style="color:white;" href="' . Yii::$app->urlManager->createAbsoluteUrl('site/index') . '"><strong>Volver al Calendario</strong></a>
                            </div> ', EOL;
?>